package com.example.osmonlinesabjimandi.Activity;

import com.example.osmonlinesabjimandi.R;
// import com.example.osmonlinesabjimandi.Activity.HelperClass; // HelperClass might not be needed if we define data directly
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log; // Added for logging
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import java.util.HashMap; // For creating a map to store user data
import java.util.Map; // For creating a map to store user data

public class RegisterActivity extends AppCompatActivity {

    EditText signupName, signupEmail, signupPassword, signupConfirmPassword;
    private FirebaseAuth myAuth;
    TextView loginRedirectText;
    Button signupButton;
    // FirebaseDatabase database; // Declared locally now
    // DatabaseReference reference; // Declared locally now

    private static final String TAG = "RegisterActivity"; // Tag for logging

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);

        // Initialize Firebase Auth instance
        myAuth = FirebaseAuth.getInstance();

        // Initialize all EditText and Button views from the layout
        signupName = findViewById(R.id.signup_name);
        signupEmail = findViewById(R.id.signup_email);
        signupPassword = findViewById(R.id.signup_password);
        signupConfirmPassword = findViewById(R.id.editTextConfirmPassword);
        signupButton = findViewById(R.id.signup_button);
        loginRedirectText = findViewById(R.id.signup_loginRedirectText);

        // Set OnClickListener for the signup button
        signupButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String name = signupName.getText().toString().trim();
                String email = signupEmail.getText().toString().trim();
                String password = signupPassword.getText().toString().trim();
                String confirmPassword = signupConfirmPassword.getText().toString().trim();

                // Basic input validation
                if (name.isEmpty() || email.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
                    Toast.makeText(RegisterActivity.this, "All fields are required.", Toast.LENGTH_SHORT).show();
                    return;
                }

                if (!password.equals(confirmPassword)) {
                    Toast.makeText(RegisterActivity.this, "Passwords do not match.", Toast.LENGTH_SHORT).show();
                    return;
                }

                if (password.length() < 6) {
                    Toast.makeText(RegisterActivity.this, "Password must be at least 6 characters long.", Toast.LENGTH_SHORT).show();
                    return;
                }

                // Attempt to create a user with email and password using Firebase Authentication
                myAuth.createUserWithEmailAndPassword(email, password)
                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                            @Override
                            public void onComplete(@NonNull Task<AuthResult> task) {
                                if (task.isSuccessful()) {
                                    // If authentication is successful, show a success message
                                    Log.d(TAG, "Firebase Auth registration successful for email: " + email);
                                    Toast.makeText(RegisterActivity.this, "Registration successful!", Toast.LENGTH_SHORT).show();

                                    // --- Save user data to Realtime Database ---
                                    FirebaseDatabase database = FirebaseDatabase.getInstance();
                                    DatabaseReference usersRef = database.getReference("users"); // Reference to the "users" node

                                    // Get the unique User ID (UID) generated by Firebase Authentication
                                    String userId = myAuth.getCurrentUser().getUid();

                                    // Create a Map to store user data
                                    Map<String, Object> userData = new HashMap<>();
                                    userData.put("fullName", name); // Save full name
                                    userData.put("email", email);   // Save email
                                    userData.put("isAdmin", false); // Default isAdmin to false

                                    // Save the user data under their UID in the "users" node
                                    usersRef.child(userId).setValue(userData)
                                            .addOnCompleteListener(new OnCompleteListener<Void>() {
                                                @Override
                                                public void onComplete(@NonNull Task<Void> dbTask) {
                                                    if (dbTask.isSuccessful()) {
                                                        Log.d(TAG, "User data saved to Realtime Database for UID: " + userId);
                                                        Toast.makeText(RegisterActivity.this, "User data saved.", Toast.LENGTH_SHORT).show();
                                                    } else {
                                                        Log.e(TAG, "Failed to save user data to Realtime DB for UID: " + userId + ". Error: " + dbTask.getException().getMessage());
                                                        Toast.makeText(RegisterActivity.this, "Failed to save user data: " + dbTask.getException().getMessage(), Toast.LENGTH_LONG).show();
                                                    }
                                                    // Always navigate to LoginActivity regardless of DB save success/failure
                                                    // This ensures a smooth user flow even if DB save fails for some reason
                                                    Intent intent = new Intent(RegisterActivity.this, LoginActivity.class);
                                                    startActivity(intent);
                                                    finish();
                                                }
                                            });

                                } else {
                                    // If Firebase Authentication fails (e.g., email already in use, weak password, no internet)
                                    Log.e(TAG, "Firebase Auth registration failed: " + task.getException().getMessage());
                                    Toast.makeText(RegisterActivity.this, "Registration failed: " + task.getException().getMessage(), Toast.LENGTH_LONG).show();
                                }
                            }
                        });
            }
        });

        // Set OnClickListener for the login redirect text
        loginRedirectText.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(RegisterActivity.this, LoginActivity.class);
                startActivity(intent);
            }
        });
    }
}
